[
    {
        "chunk_id": "0",
        "text": "Hey there. How's it going everybody? In this video we're gonna be going over scatter plots. So scatter plots are great when you wanna show the relationship between 2 sets of values and see if they are correlated. So, first, we're going to look at a basic example of a scatterplot using some data within our Python script here, and then we'll look at some real world data that I have within a CSV file. And the data within the CSV file are the views and likes of YouTube videos on the trending page,"
    },
    {
        "chunk_id": "1",
        "text": "and likes of YouTube videos on the trending page, the day that I made this video. So that might be interesting to plot out. Now I would like to mention that we have a sponsor for this series of videos, and that is brilliant.org. So I really wanna thank Brilliant for sponsoring this series, and it would be great if you all could go check them out using the link in the description section below to support the sponsors. And I'll talk more about their services in just a bit. So with that said,"
    },
    {
        "chunk_id": "2",
        "text": "their services in just a bit. So with that said, let's go ahead and get started. Okay. So I've got some sample code pulled up here in my script. Now first, we'll see how to, use these scatter plots using this list of data directly within my script, and then we'll look at a real world example with data that I'll load in from a CSV file. Now if you've been following along with the series, then you'll likely recognize the other matplotlib code that I've got here at the moment. But if not, then let"
    },
    {
        "chunk_id": "3",
        "text": "I've got here at the moment. But if not, then let me go go ahead and go over this real quick. So here at the top of the file, I'm importing pandas. I'm also importing pyplot from the matplotlib library. We are using a, plot style here of seaborne. We've been using 538 a lot throughout the series, but I wanna show what some of these different styles look like. Now we just have, some x and y data here of some random points between 110. I've got, some other code commented out here for now. Don't"
    },
    {
        "chunk_id": "4",
        "text": "some other code commented out here for now. Don't worry about that. We'll talk more about that when we get to it. We also have a title here for our plot, x and y label. Those are commented out at the moment. We also have a tight layout here with just with just, adds some automatic padding to our plots. And also we're doing plt.show, which will actually show our plot. Okay. So now let's look at how to create a basic scatterplot. Okay. So I've got a random list of values here for an x axis and a"
    },
    {
        "chunk_id": "5",
        "text": "a random list of values here for an x axis and a random list of values here for a y axis, and some of these values are repeated. So to create a scatterplot out of these values, it's as simple as saying plt.scatter, and we wanna do our x and our y values. So if I run this, and let me make this a little larger here, then we can see that we have a scatterplot of these random values. Now scatterplots are really nice for seeing different trends or outliers or things like that. Now since these are"
    },
    {
        "chunk_id": "6",
        "text": "outliers or things like that. Now since these are random, then we don't really have any trends here, but sometimes that's important to know also that there's not a trend. So our scatterplot, since it looks random like this, then this likely tells us that there's no correlation between our two lists of random values. And we'll see data, dataset here in a bit that is more correlated, with the values. But for now, let's look at some basic customizations that we can make to our scatterplot. So,"
    },
    {
        "chunk_id": "7",
        "text": "that we can make to our scatterplot. So, first of all, I feel like the sizes of the dots here are a bit small on this plot, and you can change that, by setting the size, and that is an s argument. So we'll set s equal to these sizes are always a bit weird. I have to always look up in the documentation, how these are related. But, if we run this, then now we can see that these dots are a little bit larger here on our scatterplot. Now if you bump that up to, like, 500 or something, then it would"
    },
    {
        "chunk_id": "8",
        "text": "that up to, like, 500 or something, then it would really be noticeable. So we can also change the color and the marker styles of these plots as well. So to change the color, we can simply pass in a c argument. So we'll say c is equal to green. And there are all kinds of different marker styles that we can use as well. I'm gonna leave a link, to the page where you can go find the different styles. I'll leave a link to that in the description section below if you'd like to see the different"
    },
    {
        "chunk_id": "9",
        "text": "section below if you'd like to see the different styles. But for example, if I wanted to have, like, an x symbol then as our marker, then I could simply say marker is equal to, x. So if we save that and we run it, then we can see that now we have green markers, and these green markers are shaped like x's. So let me close that out. Now I almost never use anything other than the default markers, but the option is available there if you want it. But I'm gonna remove that for now and just go back"
    },
    {
        "chunk_id": "10",
        "text": "I'm gonna remove that for now and just go back to those default, circle markers. Now another thing about scatter plots is that I think they look a lot nicer if we add edges to the circles and also give them some alpha so that we can see through them a bit. So to show you what this looks like, let me add an edge and a color. So I'll say edge color is equal to we'll just set that equal to black. That's gonna be the edges of the circles. And for the, line width, let's also set the line width of"
    },
    {
        "chunk_id": "11",
        "text": "the, line width, let's also set the line width of that edge equal to 1. And to give an alpha to our color, so that it softens it up a little bit, it's as easy as just saying, alpha is equal to, let's do 0.75. So if I run this, then we can see that now this looks a bit nicer here. I think that these, dots with these black edges looks a lot better. Now if your color is a bit too soft, then you can always play around with that alpha. Okay. So another thing that I want to show you is how the colors"
    },
    {
        "chunk_id": "12",
        "text": "thing that I want to show you is how the colors and sizes can actually be on a per mark basis rather than applying them to all of the marks. So what would, why would you want multiple colors or sizes? Well, having the ability to have multiple colors and sizes actually allows us to add additional datasets into our plot. So for example, let's say that we have our current plot that we just looked at, but we wanted to add some additional information. So for example, let's pretend that our current"
    },
    {
        "chunk_id": "13",
        "text": "So for example, let's pretend that our current plot is some survey data about a bunch of people, and we wanted to break down the data further into something more specific. So for example, let's say that we had, these people rate something from 1 to 10, and we wanted to somehow plot their rating as well. Well-to-do that, we could simply assign different numbers to these different possibilities, and those will then give you different colors on your scatterplot as long as you pass that into your"
    },
    {
        "chunk_id": "14",
        "text": "scatterplot as long as you pass that into your method. So I have a colors variable commented out here, so let me uncomment this and let me move this above our scatterplot. And I think this will make a bit more sense once we plot this out. Okay. So the numbers in this colors list, these are numbers between 110. Now, like I said before, maybe this could be a person's answer to how satisfied they are with a certain product or something like that. So each of these values will correspond to a data"
    },
    {
        "chunk_id": "15",
        "text": "So each of these values will correspond to a data point in our x and y variables. So now, if we pass this into our scatter method as the color argument, so I'm going to say whoops, I accidentally repasted that. I'm going to say c, instead of being equal to green, I want it to be equal to colors. So now I'm going to run this. Then we can see that we get different color dots. So what this is doing here is whenever we plot this x and y value here of 57, it also has a color of 7. And these"
    },
    {
        "chunk_id": "16",
        "text": "here of 57, it also has a color of 7. And these different colors here, 7, 5, 9, all of those, are going to correspond to different colors here on our chart. Now I really don't like the colors that we're getting here. These are just shades of gray. We can actually change these by using a color map. And just like the marker symbols, there are a ton of built in color maps that we can use. And I'll be sure to leave leave a link, in the description section below to all of the color map options if"
    },
    {
        "chunk_id": "17",
        "text": "section below to all of the color map options if you'd like to play around with these as well. One that I personally like is called greens. So if I come down here after colors and I say c map is that argument, c map is equal to, and that is greens with a capital g. Be sure I put in a comma there. Now let me run that. And now we can see that now we're getting these different shades of green as the intensity. So I think the lighter ones are closer to 0 and the dark ones are closer to, 10. But we"
    },
    {
        "chunk_id": "18",
        "text": "to 0 and the dark ones are closer to, 10. But we really don't know based on, how this is represented here. So you're probably gonna wanna add a label for your color map too, so that people viewing our chart know what these colors represent. So to do that, we can add a color bar legend. So I'm going to close this down. And below our scatterplot, we can just say c bar is equal to, and this is going to be plt.colorbar, and that is a method. And now I'm going to say cbar.set_label, and now we can"
    },
    {
        "chunk_id": "19",
        "text": "I'm going to say cbar.set_label, and now we can set a label for this. So like I said, maybe this could be like a satisfaction level or something, so I'll just say satisfaction. So now let me run that, And now we can see that we have a color bar here on the right side, and now we have multiple points of information here. So we can see our x y data, but then we can also see, okay, depending on how these are colored, is that person's satisfaction level. So these dark ones are very satisfied and"
    },
    {
        "chunk_id": "20",
        "text": "level. So these dark ones are very satisfied and the lighter color ones were not satisfied. Now we can also change the sizes of our data points as well. So just like with the color, this can add in an another way of explaining our data even further. So, for example, I see a lot of scatterplots that use the size of the dot for things like population and things like that, or maybe even the sample size for that data point. So I've got a random list of sizes commented out down here as well. So let"
    },
    {
        "chunk_id": "21",
        "text": "of sizes commented out down here as well. So let me grab these and let me move those up underneath colors. And just like with the colors, this is a list of 20 different sizes here that correspond to the data points in the x and y variables that we're plotting. So if I was to pass in this sizes list here as my sizes so let's see. I took sizes out oh, no. Sizes right here. Sorry. So I will paste that in as sizes there. And now if we run this, then we can see that now each of these individual"
    },
    {
        "chunk_id": "22",
        "text": "then we can see that now each of these individual plots have a size as well, and you can use that for different types of data. Okay. So now that we've seen how to do these things with our simple sample data here, let's now look at how we can plot out some real world data from a CSV file that I have here in my current directory. So in the CSV file, I pulled down some of the data from, the YouTube API, and these were the 200 the top 200 trending videos on the day that I recorded this video. And I"
    },
    {
        "chunk_id": "23",
        "text": "on the day that I recorded this video. And I wanted to do a scatterplot of their total views and their total likes. And I also calculated out the ratio of likes to dislikes as well. Now in a future video, I'll actually cover the YouTube API and show how I grab data like that from there. But that's really a different topic, So let's just continue focusing on matplotlib here for now, and we'll save that for a future video. So let me pull up this CSV file here, and let's see what this looks like."
    },
    {
        "chunk_id": "24",
        "text": "file here, and let's see what this looks like. So I've got that CSV file open here, and we can see that these are just the top 200 trending videos, on YouTube the day that I recorded this. So I didn't grab the the the titles or anything like that. I just wanted to see if there was a correlation between their view count and their likes. So here, we have the view count of the video. And so each one of these is a different video. This one had 8,000,000 views, this one had 9,000,000 views, and so"
    },
    {
        "chunk_id": "25",
        "text": "views, this one had 9,000,000 views, and so on. We have the likes for that video in the second column here, and we also have the ratio of likes to dislikes. Now since this is on the trending page, a lot of these have a high, like to dislike ratio. So this one has 96 percent likes to dislikes, 98%, and so on. So we can probably take a guess that the more views a video has, the more likes it's gonna have. But to see exactly what that correlation looks like, we're gonna have to plot it out. So"
    },
    {
        "chunk_id": "26",
        "text": "looks like, we're gonna have to plot it out. So I've got some code commented out down here at the bottom, that'll pull in some data from that CSV. So let's remove the sample code that we were working with earlier and uncomment out that other code. So I'm gonna keep our scatterplot here. So I'm going to cut that out, and I'm just gonna paste that, down here between the ratio and the title. Now for everything else, I'm just going to remove all of this sample data that we were using before. Okay?"
    },
    {
        "chunk_id": "27",
        "text": "this sample data that we were using before. Okay? And now let me uncomment out, where I'm loading in that data and also these titles and, x and y labels here. So let me describe how, what we're doing when we're loading in this data here. Now I've been using Pandas read CSV method throughout this series, but for those of you who haven't seen the rest of the series and are just watching this video, let me quickly explain what this is doing. So I'm reading in this CSV file, and this is the name of"
    },
    {
        "chunk_id": "28",
        "text": "reading in this CSV file, and this is the name of the CSV file here. And, again, this will be included, in the description section below if you'd like to download this and follow along. So it reads in that CSV and grabs all that data. Then we're setting this view count variable here equal to data and the view count key. Now what that does is it sets this view count equal to that entire column. So it's setting it equal to all of these view counts here. And also with likes, it's setting that"
    },
    {
        "chunk_id": "29",
        "text": "here. And also with likes, it's setting that equal to the likes column. So it'll be equal to the first value is, you know, 300,000, 5,60,000, and so on. And lastly, ratio, same thing. It's getting that ratio key and setting it equal to that ratio column. Okay. So to plot this out using the same scatterplot that we used before, we can simply say that we want the view count. Let's put this on the x axis, and I'll put the likes on the y axis. Now let me remove the, size, colors, and the color map"
    },
    {
        "chunk_id": "30",
        "text": "me remove the, size, colors, and the color map for now. And I will leave the edge color set to black and the line width and the alpha, but the sizes, colors, and color map, I'm gonna take out for now. Okay. So let me run this. Okay. So we can see here that we get a scatterplot. Now like I said, this is the top 200 videos on the trending page, so there should be 200 dots here. Now it looks like some of our data has bunched here in the bottom left, and that's because we have one outlier here in"
    },
    {
        "chunk_id": "31",
        "text": "and that's because we have one outlier here in the top right that was a video that had a lot more views and a lot more likes than the other views on the trending page. I actually went back to the original data to see what video was messing up my nice little scatter plot here, and it was the new Old Town Road music video by, Lil Nas X and Billy Ray Cyrus. So that's who to blame for that outlier. But I'm actually glad that there was an outlier, because it reminded me that we can use a log scale"
    },
    {
        "chunk_id": "32",
        "text": "it reminded me that we can use a log scale with scatterplots as well, to lessen how much those outliers actually skew the plot. So, to make this look a bit better and use a log scale for our axis, we can simply say, down here below our scatter method, let's say plt dot xscale, and we will use a log scale for our x axis, and we will also use a log scale for our y axis. So I've got those, put in there. Now if I run this, then now that it's using a log scale instead of a regular scale, now we can"
    },
    {
        "chunk_id": "33",
        "text": "log scale instead of a regular scale, now we can see that those outliers don't skew the data so much and that we can kind of see the correlation better here. So the correlation between how many views a video has and how many likes it has really stands out here in this plot. So now let's also use the ratio of likes and dislikes in this plot. I think that would be a good metric to use for the color of our points, And we could also try to use that for size as well, but I think that the ratios"
    },
    {
        "chunk_id": "34",
        "text": "for size as well, but I think that the ratios might be a little bit too close for us to really tell the difference in sizes like we, can for the colors. So I'm just gonna use the colors and not worry about the sizes. So to do this, I can close down our current plot. And now I'm also gonna use another color map so that we can see another example of a different color map. So here within our scatterplot, right after our likes, this doesn't have to be in any particular order, I just wanna put them"
    },
    {
        "chunk_id": "35",
        "text": "be in any particular order, I just wanna put them here, I will say c is equal to, and we want the color to be equal to the ratio. So that will, come in, and it'll set the colors, on a color map scale using these ratio values here for each of our markers. So now that we have that, I'm also going to pass in a c map, a color map, and let's use a color map of summer. I think that's a color map that I liked alright. And also, below scatter, let's also put a color bar so that we know what this"
    },
    {
        "chunk_id": "36",
        "text": "also put a color bar so that we know what this represents. So I'm going to say c bar is equal to plt dot color bar, and now we want to set a label for that as well. So I'll see cbar.label, and we will say like, dislike ratio. Okay. Whoops. Not ration, ratio. Okay. So let me run this and make this a little larger here. And I think that this looks really nice. We can see now that, we get those colors representing the like to dislike ratio, and we have our color bar here telling us, what these"
    },
    {
        "chunk_id": "37",
        "text": "we have our color bar here telling us, what these numbers actually represent. So the ones that are more bluish green have, you know, performed less well. The ones that are bright yellow, performed better. So the bright ones are up in the nineties, and the ones that are a little darker and bluish green are kinda down in the fifties and sixties, which would mean that they had almost as many dislikes as likes on that video. But since I got these from the trending page, most of these are actually"
    },
    {
        "chunk_id": "38",
        "text": "the trending page, most of these are actually gonna be on the higher end since those are more popular videos anyway. But we can see that we do have, some dark ones, mixed in here, and most of those dark ones do fall on the bottom side, of our page here. So using a scatterplot like this is a great way to get the correlation for the values that you're plotting out, and also using colors and sizes can, you know, add it to where you are adding in even more metrics and putting more information into"
    },
    {
        "chunk_id": "39",
        "text": "more metrics and putting more information into your plots. Okay. So we're just about finished up here. But before we end, I'd like to mention the sponsor of this video and that is brilliant dot org. So in this series, we've been learning about matplotlib and how to plot data in Python, and Brilliant would be an excellent way to supplement what you'd learn here with their hands on courses. They have some excellent courses covering the fundamentals of statistics, and these lessons do a deep dive"
    },
    {
        "chunk_id": "40",
        "text": "of statistics, and these lessons do a deep dive on how to think about and analyze data correctly. They even use Python in their statistics courses and will quiz you on how to correctly analyze the data within the language. Their guided lessons will challenge you, but you also have the ability to get hints or even solutions if you need them. It's really tailored towards understanding the material. They've also recently released a programming with Python course, and they even have a coding"
    },
    {
        "chunk_id": "41",
        "text": "with Python course, and they even have a coding environment built into their website so that you can run code directly in the browser. And that is a great way to compliment watching my tutorials because you can apply what you've learned in their active problem solving environment, and that helps to solidify that knowledge. So to support my channel and learn more about Brilliant, you can go to brilliant.orgforward/cms to sign up for free. And, also, the first 200 people that go to that link will"
    },
    {
        "chunk_id": "42",
        "text": "the first 200 people that go to that link will get 20% off the annual premium subscription, and you can find that link in the description section below. Again, that's brilliant.orgforward/cms. Okay. So I think that is gonna do it for this video. I hope you feel like you got a good understanding of how to use scatter plots and the kind of data that this type of plot is good for. Now like I said, it's really nice for seeing these correlations in the data, like how the views and likes were related"
    },
    {
        "chunk_id": "43",
        "text": "data, like how the views and likes were related for the trending pages. Now in the next video, we'll be going over time series plots. And these are very similar to the line plots that we saw before, but they're focused on data over a certain amount of time instead. So definitely be sure to check that out. But if anyone has any questions about what we covered in this video, then feel free to ask in the comment section below, and I'll do my best to answer those. And if you enjoy these tutorials"
    },
    {
        "chunk_id": "44",
        "text": "to answer those. And if you enjoy these tutorials and would like to support them, then there are several ways you can do that. The easiest way is simply like the video and give it a thumbs up. And, also, it's a huge help to share these videos with anyone who you think would find them useful. And if you have the means, you can contribute to Patreon, and there's a link to that page in the description section below. Be sure to subscribe for future videos, and thank you all for watching."
    }
]