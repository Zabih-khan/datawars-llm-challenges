[
    {
        "chunk_id": "0",
        "text": "Hey there. How's it going everybody? In this video, we're gonna be learning how to plot histograms. So histograms are great for visualizing the distribution of data where the data falls within certain boundaries. It's a lot like a bar graph, but a histogram groups the data up into bins instead of plotting each individual value. So the best way to see what this looks like is to just take a look at some examples. Now I would like to mention that we do have a sponsor for the series of videos, and"
    },
    {
        "chunk_id": "1",
        "text": "do have a sponsor for the series of videos, and that is brilliant.org. So I really wanna thank Brilliant for sponsoring this series, and it would be great if you all could check them out using the link in the description section below and support the sponsors. And I'll talk more about their services in just a bit. So with that said, let's go ahead and get started. So I have a little starting code here that you might recognize if you're continuing from previous videos. But if you're not, then"
    },
    {
        "chunk_id": "2",
        "text": "from previous videos. But if you're not, then let me give a quick overview of the code here and what's, what's going on. Okay. So up here at the top of the code, I am importing pandas. I'm also importing, pyplot from matplotlib. I'm using the 538 style, for, just to make our plots look a little nicer. And here is the data that I'm gonna be using for this video. Right now, I just have a list of ages here between 18 and 55. Here's some data that I have commented out in a CSD file, and we'll look"
    },
    {
        "chunk_id": "3",
        "text": "have commented out in a CSD file, and we'll look at this, once we get further along in the video and see how to plot out more data than just this small list. Okay? So down here at the bottom, we are also creating a title for our plot. We have x and y axis labels. We have a tight layout which just, gives our plot some padding. And also, we are doing plot dot show which will actually show our plot. Now as usual, if you'd like to follow along, then I will have this code available on my GitHub, and"
    },
    {
        "chunk_id": "4",
        "text": "I will have this code available on my GitHub, and there's a link to that in the description section below. If you wanna go there and copy and paste this into your editor so that you can follow along with this exact data. And I'm also gonna have the data dot CSV file that I'm using in this video as well. Okay. So like I was saying, we're first gonna look at how to do this using this list of, data directly here in the Python script, and then we'll look at a real word example with data that I'll"
    },
    {
        "chunk_id": "5",
        "text": "look at a real word example with data that I'll load in from a CSV file. So first, let's look at this small list of sample data. So let's pretend that we took a survey and we tracked the ages of all the people who responded. Now it might be useful to plot those ages to get an idea of which age groups are in our sample size. So how should we actually plot these? Well, off the top of your head, you might think that a bar chart would be a good idea for this. But if you think about it, we possibly"
    },
    {
        "chunk_id": "6",
        "text": "for this. But if you think about it, we possibly have up to a 100 different possible ages, maybe even more. So if you plotted out how many responses we got from each age, then that would mean you'd have almost a 100 different columns, which definitely isn't useful. So this is where histograms come in. Histograms allow us to create bins for our data and plot how many values fall into those bins. So to see this, let's create a histogram of this list of ages that we have here. So to do this, I can"
    },
    {
        "chunk_id": "7",
        "text": "of ages that we have here. So to do this, I can simply say plt.hist, and we will plot out those ages. Now if I ran this now, then it would give us a plot, but really we wouldn't know what bins it's actually using. So I always like to pass those in manually and explicitly so that people know what those bins are. So when we specify bins, we can either pass in an integer or a list of values. If we pass in an integer, then it will just, make that number of bins and divide our data into those"
    },
    {
        "chunk_id": "8",
        "text": "number of bins and divide our data into those accordingly. So for example, if I was to say bins is equal to 5, then this will divide all of these ages up into 5 different bins and then tell us how many people fell into those age ranges. So if we run this, then we can see that we get a pretty simple histogram here. And what this is is a distribution here. Now I personally find it a bit difficult to read these sometimes if we don't have edge colors for each bin, because they all just kind of run"
    },
    {
        "chunk_id": "9",
        "text": "for each bin, because they all just kind of run together here. So I don't know exactly how many bins there are here and here. I'm guessing since we have 5 bins, it's 2 bins here and 3 bins here. But let's add in some edge colors so that's more clear. So we can add those in by going back to our plot here, and I'm just going to pass that as an argument. So edge color is equal to, I'll just say, black. So now let's run this, and now we can see those bins a bit more clearly. So let me make this a"
    },
    {
        "chunk_id": "10",
        "text": "bins a bit more clearly. So let me make this a little larger and also to where you can see the ages up here at the top. And let me explain what this is actually doing. So we said that we wanted our data plotted on a histogram, and we wanted that broken up into 5 different bins. So it calculated those ages for us. So this looks like it's between, let's see, 18 and, like, 26 maybe, and then 26 to, like, 33, and so on. But what this is telling us here is that there are 4 people in our ages here"
    },
    {
        "chunk_id": "11",
        "text": "here is that there are 4 people in our ages here that fall between 18 to 26. And there are 4 people that fall between 26 to 33 and so on. And then we just have one person, in these higher age ranges for each of those bins. So if you pass in an integer for our bins, then that's what we get. But we can also pass in our own list of values, and those values will be the bins. And I like passing in a list of bins for this kind of data because you have more control over the exact values. So for"
    },
    {
        "chunk_id": "12",
        "text": "have more control over the exact values. So for example, let's say that I wanted to plot the ages broken up into groups of, 10 year differences. So I could say right here above my plot, I'm gonna say bins is equal to, and I'm just going to say that we want a bin for 10, 20, 30, 40, 50, and 60. And now instead of passing in that we want 5 bins, I want to say that I want to use this list as my bins. So now if I run this, then we can see that we still get 5 different bins here, but that's only"
    },
    {
        "chunk_id": "13",
        "text": "still get 5 different bins here, but that's only because, we have 6 values here in our list. So it starts at 10, and then 10 to 20, 20 to 30, 30 to 40, 40 to 50, and 50 to 60. So that is 5 bins total. So if I open this back up, now the reason I like using my own bins for this kind of data is because now it doesn't have to try to guess where I want these broken up. So we can see that now we have from 10 to 20. It's a lot easier to read. We don't have guess. It's like 26 or something like that."
    },
    {
        "chunk_id": "14",
        "text": "have guess. It's like 26 or something like that. So we're saying from 10 to 20, 2 people in our ages list fell into that bin. There were 4 people from 20 to 30, 3 from 30 to 40, 1 from 40 to 50, and 1 from 50 to 60. So that's how you plot and read a a histogram. And we can even exclude some data if we don't want, to add those ranges to our bins. So for example, let's say that we didn't want to include the ages between, 10 to 20 in my results. Well, to do that, we can just simply remove 10 from"
    },
    {
        "chunk_id": "15",
        "text": "to do that, we can just simply remove 10 from the bin, and now 20 will be that leftmost value. So now if we run this, then now we can see that it's not even plotting out, the ages from 10 to 20 there. So this 19 and 20 don't even show up in our results here. So this is now just giving us our results for the people who fell into these age ranges, between 20 60. Okay. So now that we've looked at this small example, now let's look at a real world example, looking at some real data. So let me"
    },
    {
        "chunk_id": "16",
        "text": "example, looking at some real data. So let me uncomment what I've got here. Let me remove ages here. So I'm just going to remove that data that is directly in our Python script. Now I'm going to uncomment out the data that I had down here. Let me cut that out and paste it here, above our bins and our plot. Okay. So I'm loading in this data dot CSV file, and I'm using this pandas dot read CSV method to do this. Now we've done this a few times so far in the series, but if this is your first video"
    },
    {
        "chunk_id": "17",
        "text": "in the series, but if this is your first video that you are watching in the series, then let me explain this really quick. So we are loading in this data dot CSV. So what this does is it goes to this c data dot CSV file here. So let me explain, what this survey data is. So we have these responder IDs, and this is just an ID for each person who responded to the survey. So this is one person here. This is another person here, another person here. And then our age column here is just the age for"
    },
    {
        "chunk_id": "18",
        "text": "And then our age column here is just the age for the people who responded to this survey. So this person was 14, this person was 19, 28, 22, and so on. So back here, we have our IDs variable, and we're setting that equal to data, and then we are passing in this responder ID key. So what that does is it sets those IDs equal to all of these IDs here that are in this responder ID column. And here, we're saying ages is equal to data age, and that is setting that ages variable there equal to, this"
    },
    {
        "chunk_id": "19",
        "text": "setting that ages variable there equal to, this entire column here for our ages. And the data that I'm using here are the responses from the 2019, Stack Overflow developer survey. So this is actually real data for people who answered that survey. So we have, let's see, over 79,000 responses here, in this data dot CSV file. Okay. So let's plot a histogram of the ages for this dataset and see what age ranges most people fall into who answered this survey. So I'm going to expand the bins here a"
    },
    {
        "chunk_id": "20",
        "text": "survey. So I'm going to expand the bins here a bit, and I'm gonna say, 10, 20, 30, 40, 50, 60 will also cover 70, 80, oops, 80, 90, and let's also put in a 100 there. Now since we called this ages variable here the same thing that we had before, we don't even need to change our histogram plot, because that is still just ages there. So now I should be able to run this and get some real data here from this, or some results here from that data. So we can see here that based on this plot, that"
    },
    {
        "chunk_id": "21",
        "text": "So we can see here that based on this plot, that almost 40,000 Now it might Now it might not look like, we have data for 70 to 80 and 80 to 90, but it's likely because there just weren't many responses with those ages. And compared to 40,000 responses for the 20 to 30 group, it's just too small to show up. But I bet if I was to zoom in on these values here, then we will start to see something. Okay. So here's 70 to 80. If I zoom in here, then we can see 80 to 83. So there are some responses"
    },
    {
        "chunk_id": "22",
        "text": "we can see 80 to 83. So there are some responses there, but they're just being dwarfed by, these numbers over here. Now when you have certain values that are a lot more than your other values, then you can plot this on a logarithmic scale to mon to not make this look so extreme. So to do this, we can add an argument of log equals true to our plot. So within our hist method, I'm just going to say log is equal to true. And now if I run this, then this is plotting this on a logarithmic scale and"
    },
    {
        "chunk_id": "23",
        "text": "this is plotting this on a logarithmic scale and we can see that now, we do have that data visible for 70 to 80, 80 to 90, and 90 to a100. So we actually had more people who responded, to the survey that they were between the ages of 90 to a100 than the people who were between 8090. So I think that's kinda interesting there. Now sometimes you might find it useful to add some additional information within these plots as well. So for example, let's just leave the, histogram how we have it for"
    },
    {
        "chunk_id": "24",
        "text": "just leave the, histogram how we have it for now, but let's say that we want to plot a vertical line where the median age of all the respondents is. And I've got this commented out down here, at the bottom here. So let me uncomment out this median age, and also I'm gonna uncomment this color and this legend as well. So I went through and I calculated the median age of all of the respondents, and it was 29 years old. So now, let's plot a vertical line on our existing plot, with that age. So to"
    },
    {
        "chunk_id": "25",
        "text": "line on our existing plot, with that age. So to do that, just above our legend here, I wanna say plt.axvline. So I'm pretty sure that is, stands for axis vertical line, and we want that line to be plotted at the median age. And now let's also I'm gonna add in a color here. And the custom color, I'm gonna add, as this. I think this is just a red color that I grabbed. And also let's put in a label so that we know what this, line represents. And I'm just gonna say age median. So now let's run"
    },
    {
        "chunk_id": "26",
        "text": "I'm just gonna say age median. So now let's run this. And now we can see that within our histogram, we now have, this vertical line here, which is the age median. So this plot tells us a lot of things. It tells us how many people are falling within which age groups, who answered the survey and also where the median is for those survey results. And if you think that this line is a little bit thick and kind of obstructing the data anyway, then you can play around with how this looks. So for"
    },
    {
        "chunk_id": "27",
        "text": "you can play around with how this looks. So for example, if you wanted to change the thickness there, instead we could say line width is equal to 2. If I run that, then that's a little thinner there. So that's basically what these histogram plots are used for. We can use these for dropping our data into these different bins and see how many values fall into these certain bins. So that's what you would use a histogram for. Okay. So we are just about finished up here. But before we end, I'd like"
    },
    {
        "chunk_id": "28",
        "text": "finished up here. But before we end, I'd like to mention the sponsor of this video, and that is brilliant.org. Brilliant is a problem solving website that helps you understand underlying concepts by actively working through guided lessons. They have computer science courses ranging from algorithms and data structures to machine learning and neural networks. They even have a coding environment built into their website so that you can run code directly in the browser. And that's a great way to"
    },
    {
        "chunk_id": "29",
        "text": "in the browser. And that's a great way to compliment watching my tutorials because you can apply what you've learned in their active problem solving environment, and that helps to solidify that knowledge. Their guided lessons will challenge you, but you also have the ability to get hints or even solutions if you need them. It's really tailored towards understanding that material. So their computer science material is fantastic, and I really like what they're doing. They also have plenty of"
    },
    {
        "chunk_id": "30",
        "text": "like what they're doing. They also have plenty of courses depending on what you're most interested in. So they have courses in different fields of mathematics or astronomy, solar energy, computational biology, and all kinds of other great content. So to support my channel and learn more about Brilliant, you can go to brilliant.org forward slash cms to sign up for free. And, also, the first 200 people that go to that link will get 20% off the annual premium subscription, And you can find that"
    },
    {
        "chunk_id": "31",
        "text": "premium subscription, And you can find that link in the description section below. And, again, that's brilliant.orgforward/cms. Okay. So I think that is gonna do it for this video. I hope you feel like you got a good understanding of how to use histograms and also when it might be appropriate for different kinds of datasets. These are definitely nice when we have data like we did in this video where we wanna divide those, ages up into different bins and get an idea of those age distributions."
    },
    {
        "chunk_id": "32",
        "text": "bins and get an idea of those age distributions. And sometimes that just doesn't tell you, the information that you're looking for. And And sometimes that just doesn't tell you, the information that you're looking for, and these histograms, are better suited for that. Now in the next video, we're gonna be learning about scatter plots. So scatter plots are great when we wanna show the relationship between 2 sets of values and see how they're correlated. So for example, let's say that we wanted"
    },
    {
        "chunk_id": "33",
        "text": "So for example, let's say that we wanted to see how salaries were correlated with age or something like that. Well, we would probably assume that on average, we'd see higher salaries with higher ages. But to be sure, we can plot that with a scatterplot and see what that data looks like. So definitely be sure to check out that video. But if anyone has any questions about what we covered in this video, then feel free to ask in the comment section below, and I'll do my best to answer those. And if"
    },
    {
        "chunk_id": "34",
        "text": "and I'll do my best to answer those. And if you enjoy these tutorials and would like to support them, then there are several ways you can do that. The easiest way is to simply like the video and give it a thumbs up. And, also, it's a huge help to share these videos with anyone who you think would find them useful. And if you have the means, you can contribute through Patreon, and there's a link to that page in the description section below. Be sure to subscribe for future videos, and thank you"
    },
    {
        "chunk_id": "35",
        "text": "to subscribe for future videos, and thank you all for watching."
    }
]