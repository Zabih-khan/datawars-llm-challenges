[
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_0",
        "text": "Hey there. How's it going everybody? In this series of videos, we're gonna be learning how to use the Pandas library in Python. So Pandas is a data analysis library that allows us to easily read in and work with different types of data. So we can use this to analyze CSV files, Excel files, and other similar formats. So if you're getting into the data science field, then this library is going to be essential to learn. It's one of the most downloaded packages for Python, and that's for a great reason. So not only does it allow us to easily read in and analyze data, but it also has great performance since it built on top of NumPy. And we'll be learning how to do different types of an analysis or of data analysis in this series. So in this video, we're going to be going over how to get Pandas installed, how to download the data that I'll be using for most of this series, and also how to get all of this open in a Jupyter notebook so that we're ready to do some coding and analysis"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_1",
        "text": ". Now, I'd also like to mention that we do have a sponsor for this series of videos, and that is brilliant.org. So I really wanna thank Brilliant for sponsoring this series, and it would be great if you all could check them out using the link in the description section below and support the sponsors. And I'll talk more about their services in just a bit. So with that said, let's go ahead and get started. So first of all, let's install Pandas. So I am using a clean virtual environment for this series, but you don't have to use a virtual environment if you don't want to. If you don't know what a virtual environment is and would like to learn more about those, then I'll be sure to leave a link, to my video on that topic in the description section below if anyone is interested. So it's really easy to install pandas here. All we need to do is say pip install pandas, and we will let this run through. And once we have Pandas installed, then let's also install Jupyter so that we can use Jupyter Notebooks"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_2",
        "text": ". Now I was a bit hesitant to use Jupyter for this series, because some people find it difficult to get the hang of. But honestly, if you're gonna be doing a lot of work with pandas, then it's definitely a nice tool, to use for this. So now, it's not necessary, so you should be able to follow along with this series just fine if you're using a regular editor. But Jupyter Notebooks allows us to actually see our data more easily by using the browser to print out our data in tables that make it easier to visualize. So I'm gonna use it in the series, but you don't have to in order to follow along. So to install Jupyter, I'm gonna say pip install, and this is going to be, JupyterLab. And this is spelled, j u pyter l a b, JupyterLab. So we'll get that installed. Now, I'm not going to go into a deep dive in how to use Jupyter in this series"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_3",
        "text": ". I'm mainly going to focus on Pandas, but if you'd like a detailed overview of how to use Jupyter, then I do have a video on how to use Jupyter in-depth, and and I'll leave a link to that video in the description section below if anyone would like to learn more, about the details of using that. Okay. So now we have Pandas and Jupyter Notebooks installed. Now we're going to need to download the data that I'll be using for most of this series. Now for anyone who's been watching my latest videos, you know that I like to use the Stack Overflow developer survey for different kinds of data analysis. Now, the reason that I like to use this data is because it's real world data, and it has a lot of data in there that I think would be interesting to most people who are watching these types of videos. I've seen some other tutorials where the data just seems kind of unrealistic and not very relatable"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_4",
        "text": ". So, hopefully, using this data will keep people interested and also give you a good idea of what it's like to actually download, download real data from a source and start analyzing it with Pandas. So to download this data, I have this pulled up here in the browser. We can go over to the Stack Overflow survey results page. Now, this is easy to find if you just Google it, but just to keep things easy, I'll have a link to this download page in the description section as well. Okay. Now on this page, you can download the data in CSV form for any year that they have available. And now I'm gonna go ahead and download the 2019 data, which is the, top data here. So I'm going to download this CSV here, and then we'll click on download again, and this should, go ahead and download this for us. Okay. It did. And now I'm going to open this in my finder here, and I'm going to unzip this data. It comes in a zip drive"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_5",
        "text": ". And once that data is downloaded and unzipped, I'm going to go ahead and drag that folder to a folder here on my desktop, and that's where we'll also create a notebook and analyze this data. So real quick, I don't have this open. Let me open up, this pandas demo folder, and this will open this in Finder. And now I will take the data and drag this into this pandasdemo folder that is on my desktop. So your projects can be anywhere, but I just had I just created a, project folder here on my desktop called pandas demo, and it's completely empty except for the data that we just dragged in here. So now I'm going to rename this since this is kind of a long name here. I'm just gonna rename this to Data. That was, named Developer Survey 2019, but I'm just gonna call that Data so that it's easy for us to, find that within our script. Okay. So what files do we have here in the directory that we unzipped in this data directory? Let me make this a little larger here. Okay"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_6",
        "text": ". So first of all, if you download, data that comes with a Readme, then this is usually helpful. We have a Readme file right here. It tells you what these other files are going to be. So in this case, we have this survey results public dot CSV, and that contains the main survey results, one respondent per row and one column per answer. And the survey results schema here, has the questions that correspond to each column name in the results. Now, if any of this doesn't make sense now, then it then it will once we open up this data in Jupyter. So I'm just giving a broad overview here. Don't let this, overwhelm you by everything that I'm saying here. This will make a lot more sense once we open this up in Jupyter. So let's go ahead and do that. So to open this in a Jupyter notebook, I'm going to go back to my terminal. So I'm gonna go ahead and close these finder windows open here, go back to my terminal. And now within here, I'm going to navigate to my folder where I placed that data"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_7",
        "text": ". And this should be the same command on Mac, Linux, and Windows. So I'm gonna say cd, and I'm gonna go to my desktop. This is gonna be wherever your, project directory is, but mine is in this pandas demo on my desktop. And once I am navigated to that directory, to start up a Jupyter Notebook, we just need to say Jupyter, notebook and run that. And we should see a server start up here, and it seems like it's taking a second. Okay. There we go. Now back in our terminal here, this will run a Jupyter server, and you will need to leave that terminal open while you're working in Jupyter. So Jupyter Run runs in the browser, so if you shut down this server, then you won't be able to access our notebook. Okay. So let's go back here to the browser, and this is where we have our Jupyter Notebooks. So let me zoom in here so that we can, so that everybody can read this fairly well. Okay. I'll zoom in to about right there. I think it's good. Okay"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_8",
        "text": ". So we can see our data folder here that we downloaded and placed in our, Jupyter demo folder a little bit ago. But now let's create a new notebook. So to create a new notebook, I'm gonna click on new up here at the top right, and then I'm gonna use Python 3. And now, we can name our notebook. So up here where it says untitled, I'm gonna click here, and I'm just gonna call this, pandas demo and rename that. Okay. So now we're ready to start using Pandas. So we can import this by saying import pandas as p d. Now importing pandas as p d is just a common convention when using pandas, so let's run that. And I ran that cell by pressing shift and enter. And again, I'm not gonna go into the specifics of working here within Jupyter in this series, but if you'd like a rundown of the features and shortcuts that I'll be using, then I do have a link to my Jupyter video in the description section below. Okay. So for the rest of this video, we'll see how to load in our data and look at some information about that data"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_9",
        "text": ". So our data is in a CSV format. So in order to read in that CSV, we can simply say, df, which is going to stand for data frame, we'll learn about all about data frames here in a bit, we're going to say df is equal to pd dot read_csv. We're gonna use the read CSV method from, Pandas here, and now we just wanna pass in a path to our CSV file. Now mine was within that data folder, and that was within the file survey underscore results underscore public dot CSV. So now, if I hit shift enter, then that will run that cell. So right off the bat, we can see that this is pretty simple to work with. So when using native Python, in order to read in a csv file, we need to use the csv module to create a csv reader and things like that, But here, we're just doing this all in one line. So when it reads this in, it's going to read it in as a DataFrame. So data frames are pretty much the backbone of Pandas, and we'll go more into, we'll go over data frames and, series objects in-depth in the next video"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_10",
        "text": ". But for the basics, a data frame is basically just rows and columns of data. We can see what a data frame looks like just by printing it out. And this is the great thing about using Jupyter Notebooks because it allows us to visualize, these things in ways that we can't do in other editors. So here in Jupyter, I can simply just say df and run that, and it will print out, our data frame here. So we didn't even need to, wrap this here in a print function. Now, if you're using a normal editor, then you can still print out, data frame information, but it is not going to look as good as it does here in Jupyter, where we get this interactive table. So this is a small look at our data. Now this is actually 85 columns here, but if I scroll through these, then it doesn't look like there's actually 85 columns printed out here. So this is actually concatenated, by default just to give us a broad overview of the data. So by default, Jupyter is displaying 20 columns from our, data frame"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_11",
        "text": ". Now how did I know that there was 85 columns for this data frame? Well, there are a few attributes and methods that we can use, to get an idea of what our data looks like. So first, we have the shape attribute, and shape, gives us the number of rows and columns in a tuple form. So let's look at this. So in our next cell down here, I'm gonna say df dot shape, and I will run that. Now this is an attribute here. It's not a method, so you don't wanna put parentheses. So d f dot shape, and we can see that we, have 88,000 rows and 85 columns. Now if you wanted a, bit more information, then we can use the info method. The info method will give us the number of rows and columns and also all of the data types of all the columns as well. Now before I run that, it looks like, my text is getting cut off here a little bit. Sometimes this happens whenever I'm within, Jupyter. In order to fix this, I usually just come up here and restart and run all my cells again. That usually takes care of the problem"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_12",
        "text": ". Let's see if that works. Okay. So that seemed to work. Another thing that you can do here is just to totally reload the page in the browser. And when you reload the page, I think it's just because of how my I have this, text enlarged, so it's kinda messing with, how these look. But now we can see these just fine. Okay. So like I was saying, we can see here that we have 88,883 rows and 85 columns. Now if you wanted, more information, then we can use the info method, and that will give us the number of rows and the number of columns, but also all of the data types of the columns. So let's run that. So if I do df.info whoops.df.info. Now this actually is a method, so we do want to, put the parenthesis there. And let me run this. And now let's go over this output. So we can see here that it says that we have 88,883 entries, so those are our rows. We have a total of 85 columns, and then it lists all of our columns here for our data. So these are all the columns in our CSV file that we have loaded in"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_13",
        "text": ". Now, it also gives us the data types of each of these columns, and we're gonna go over data types in a future video. But for the most part, objects usually mean strings, and then we have other things as well. So int 64 is just an integer. Float is a float, so a probably a decimal number. And there are no other data types in this dataset. But there are more data types in general, so I will be sure to do a video on, data types specifically, in the near future. Okay. So now that we know the number of rows and columns, let's change a setting here within Jupyter so that we can see all of the columns. So I think it would be useful to see all of these, if we'd like to, even if there are a lot of these to scroll through. So to do this, we can change a setting, and I'm gonna come down here to the bottom here, and I'm gonna change a setting by saying pdot set underscore option. And within here, I will say display dot max underscore columns, and I will set that equal to 85 so that we can see all of our columns"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_14",
        "text": ". And I will run that. And now if we print out our data frame so I'm going to go back up here, to where we printed out this data frame, and I will rerun that cell. And now if I scroll through these columns, then we can see that now it looks like we actually have these 85, different columns here. So I can keep scrolling and keep scrolling, and it didn't just chop us off at that 20 like it was before. Now, obviously, the rows are also being concatenated here, and we definitely don't wanna print out all 89,000 of these rows, but, there probably are some examples with certain datasets where you might wanna see all of the rows as well. So for example, I said that the survey results results schema dot CSV file that was included in our download, gives the matching questions for all of these, column names here. So if we wanted to see what these column names here, mean for this data, then we can load in that schema CSV file as well. So let me do this"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_15",
        "text": ". I'll go down to the bottom of our notebook, and I will just load this in by saying schema underscore df. Now, I don't wanna just call this, df because we don't wanna overwrite our other data frame. And I will load this in just like we saw before by saying pd dot read underscore CSV, and this is within the data folder, and this was called survey underscore results underscore schema dot CSV. So I will run this, and now let's look at, this schema data frame that we just loaded in. So here, we on, this column column here, this gives us all of the columns in our other data frame. So we have respondent, main branch, hobbyist. And if I scroll up to that data frame here I'm gonna delete this info here since we'd no longer need that. If I scroll up to this data frame here, then we can see respondent, main branch, hobbyist. So if we want to know what these mean, then that's what we use the schema for"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_16",
        "text": ". So we can see that main branch or hobbyist means do you code as a hobby? Main branch means which of the following options best describes now it actually concatenates the text too. In order to actually see this the full text, we could either change an option or we could just access this value directly. And I will be showing you how to do that in the next video. But for now, we can see that we can't see all of the rows, to the questions that correlate to each column name here. Remember, we have 85 columns. But for here, we can only see the first five, and then we get this ellipses here, and then we can see the last 5. So let's set this up so that we can view 85 rows and then reprint this so that we can see all of these. So back in the same cell where we set our max columns, now let's also add one for rows as well. So I'm just gonna copy and paste that, but instead of max columns here, I'm gonna have this be max rows, and I will run that"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_17",
        "text": ". And now we will rerun this schema here, and now we can see that we can see all of the columns and the corresponding, question text. So if you wanted to know what any of these columns mean, then this is how we do it. So we can see IT person. The question was, are you the IT support person for your family? So that's probably a yes or no question. So that is what those mean. So if you're going through this data on your own, then you can use this as a reference, anytime you don't know what a certain column means in our survey data. And if you don't know, or if you don't want to look through all of these to find a specific row for a specific, column name, then in a future video, we're gonna learn about filtering data frames and see how we can just grab a specific row where the column equals equals a certain value. Okay. So now we have all 85 rows visible of our schema data frame here. But you might be thinking, well, that's nice, but I don't want to see 85 rows of my survey data every time I want to look at it"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_18",
        "text": ". But there are a couple of methods that we can use to only see a certain number of rows, which you'll most likely use a lot just to get an idea, that your filters and data frames seem to be working correctly. So we can see the first five rows by saying, instead of doing, df here, we can say df.head. And if I run that, then we just get the first five rows here. Okay? And you can pass in a value if you want to see a certain number of values. So if you wanted to see the first 10 rows, then we could pass in a 10 to df.head, and this gives us the first 10 rows. So we can see it goes all the way down, 0 through 9 there. Now if you'd like to see the last rows instead of the first rows, then we can use the tail method instead. So if we say df.tail, and, we could use it without a number also. But if we pass in a number just like with head, then now we're gonna say that we want the last 10, entries here in our data. So those are the last 10 items of our data. Okay"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_19",
        "text": ". So this is a brief overview of getting pandas installed and then downloading our data and loading our data into Jupyter, and how to read this in. Now before we end here, I'd like to mention the sponsor of this video, and that is brilliant dot org. So in this series, we've been learning about Pandas and how to analyze data in Python. And Brilliant would be an excellent way to supplement what you learn here with their hands on courses. They have some excellent courses and lessons that do a deep dive on how to think about and analyze data correctly. For data analysis fundamentals, I would really recommend checking out their statistics course, which shows you how to analyze graphs and determine significance in the data. And I would also recommend their machine learning course, which takes data analysis to a new level, where you'll learn about the techniques being used that allow machines to make decisions where there's just too many variables for a human to consider"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_20",
        "text": ". So to support my channel and learn more about Brilliant, you can go to brilliant.orgforward/cms to sign up for free. And also, the first 200 people that go to that link will get 20% off the annual premium subscription, and you can find that link in the description section below. Again, that's brilliant.orgforward/cms. Okay. So I think that is gonna do it for our first Pandas video. I hope you feel like you got a good introduction on how to install Pandas and load in your data to a Jupyter Notebook. In the next video, we're going to be learning more about data frames and also learn about the series data type. So we'll learn how we can think about data frames in a way that's easier to understand, and also see how we can grab certain elements, columns, and rows from these as well, so be sure to stick around for that. But if anyone has any questions about what will be covered in this video, then feel free to ask in the comments section below, and I'll do my best to answer those"
    },
    {
        "chunk_id": "7b4af4ca8448bcf6d8b60e1adfa5b17727a1564e1c775eb0aeb158dc7efb14af_21",
        "text": ". And if you enjoy these tutorials and would like to support them, then there are several ways you can do that. The easiest way is to simply like the video and give it a thumbs up, and also it's a huge help to share these videos with anyone who you think would find them useful. And if you have the means, you can contribute to patreon, and there's a link to that page in the description section below. Be sure to subscribe for future videos, and thank you all for watching."
    }
]